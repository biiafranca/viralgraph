services:
  neo4j:
    image: neo4j:5.18
    ports:
      - "7474:7474"  # web
      - "7687:7687"  # bolt
    environment:
      - NEO4J_AUTH=${NEO4J_USER}/${NEO4J_PASSWORD}
    volumes:
      - neo4j-data:/data
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "${NEO4J_USER}", "-p", "${NEO4J_PASSWORD}", "RETURN 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - neo4j
    environment:
      - DOCKER_ENV=true
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}

  etl:
    build:
      context: ./etl
      dockerfile: Dockerfile
    depends_on:
      neo4j:
        condition: service_healthy 
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
  
  api-test:
    build:
      context: ./api
      target: build
    environment:
      - DOCKER_ENV=true
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
    depends_on:
      neo4j:
        condition: service_healthy
    command: go test ./...

volumes:
  neo4j-data:
